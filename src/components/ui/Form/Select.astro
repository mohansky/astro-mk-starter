---
import type { HTMLAttributes } from "astro/types";
import { cn } from "@/lib/utils";

interface Props extends HTMLAttributes<"select"> {
  variant?: "default" | "bordered" | "ghost";
  size?: "lg" | "md" | "sm" | "xs";
  color?: "primary" | "secondary" | "accent" | "info" | "success" | "warning" | "error";
  disabled?: boolean;
  class?: string;
}

const {
  variant = "default",
  size,
  color,
  disabled = false,
  class: className,
  ...rest
} = Astro.props;

const variants: Record<string, string> = {
  default: "select w-full",
  bordered: "select select-bordered w-full",
  ghost: "select select-ghost w-full",
};

const sizes: Record<string, string> = {
  lg: "select-lg",
  md: "select-md",
  sm: "select-sm",
  xs: "select-xs",
};

const colors: Record<string, string> = {
  primary: "select-primary",
  secondary: "select-secondary",
  accent: "select-accent",
  info: "select-info",
  success: "select-success",
  warning: "select-warning",
  error: "select-error",
};

const classes = cn(
  variants[variant],
  size && sizes[size],
  color && colors[color],
  className
);
---

<select
  class={classes}
  disabled={disabled}
  {...rest}
>
  <slot />
</select>