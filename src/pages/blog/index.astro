---
// src/pages/blog/index.astro
import { getCollection, type CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import Layout from "../../layouts/Layout.astro";
import Container from "../../components/ui/Container.astro";
import Card from "../../components/ui/Card/Card.astro";
import CardBody from "../../components/ui/Card/CardBody.astro";
import CardTitle from "../../components/ui/Card/CardTitle.astro";
import Badge from "../../components/ui/Badge.astro";
import Heading from "../../components/ui/Heading.astro";
import Button from "@/components/ui/Button.astro";
import ArrowRight from "@/components/Icons/ArrowRight.astro";

const allBlogPosts = await getCollection("blog");
const publishedPosts = allBlogPosts
  .filter((post: CollectionEntry<"blog">) => post.data.published)
  .sort(
    (a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) =>
      new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
  );
---

<Layout>
  <Container class="py-8">
    <Heading as="h1" class="mb-8 text-center">Blog List</Heading>

    <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
      {publishedPosts.map((post: CollectionEntry<"blog">) => (
        <Card class="h-full">
          {post.data.image && (
            <Image
              src={post.data.image}
              alt={post.data.title}
              width={600}
              height={400}
              class="w-full h-48 object-cover rounded-t-lg"
            />
          )}
          <CardBody>
            <div class="flex items-center gap-2 mb-2">
              <Badge variant="soft" color="info" >
                {new Date(post.data.date).toLocaleDateString("en-US", {
                  year: "numeric",
                  month: "short",
                  day: "numeric",
                })}
              </Badge>
            </div>
            <CardTitle class="mb-2">
              <a href={`/blog/${post.id}`}>
                <Button variant="link" size="lg">{post.data.title}</Button>
              </a>
            </CardTitle>
            <p class="text-gray-600 text-sm mb-4">{post.data.description}</p>
            <a href={`/blog/${post.id}`}>
              <Button variant="outline">Read more <ArrowRight class="w-4 h-4"/></Button>
            </a>
          </CardBody>
        </Card>
      ))}
    </div>

    {publishedPosts.length === 0 && (
      <div class="text-center py-12">
        <p class="text-gray-600">No blog posts found.</p>
      </div>
    )}
  </Container>
</Layout>
